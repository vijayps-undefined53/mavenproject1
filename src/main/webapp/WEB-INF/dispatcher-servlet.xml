<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:p="http://www.springframework.org/schema/p"  
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
        xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
http://www.springframework.org/schema/context  
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  

    <mvc:annotation-driven></mvc:annotation-driven>
    <context:component-scan base-package="com.mycompany.mavenproject1.">       
    </context:component-scan>  
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"></property>
        <property name="url" value="jdbc:postgresql://localhost:5432/mydb"></property>
        <property name="username" value="postgres"></property>
        <property name="password" value="IndiaEC@123"></property>
    </bean>  
    
 <!--   Hibernate based configuration ,this configuration was made before JPA based configuration below and had worked perfectly.
 
<bean id="hibernate4AnnotatedSessionFactory" 
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="annotatedClasses">
            <list>
                <value>com.Person
                </value>
                <value>com.Employement_history
                </value>
            </list>
        </property>
        <property name ="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                
            </props>
        </property>
    </bean>-->

    <bean id="entityManagerFactory" 
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="packagesToScan" value="com" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />            
        <property name ="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>

            </props>
        </property>
    </bean>
    <bean id ="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
    
        <bean id ="person" class="com.mycompany.mavenproject1.Person">
    </bean>
    <bean id ="employement_history" class="com.mycompany.mavenproject1.Employement_history">
    </bean>

 
    <tx:annotation-driven transaction-manager="transactionManager" />
	
    <!-- Hibernate Transaction Manager configuration
 <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>-->
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

        <!-- setting maximum upload size -->
        <property name="maxUploadSize" value="100000" />

    </bean>
    <mvc:resources mapping="/imgs/**" location="/WEB-INF/imgs/"></mvc:resources>
    
      <jpa:repositories base-package="com.mycompany.mavenproject1" />
</beans>
